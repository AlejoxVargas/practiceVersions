<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/USUARIO CCC - TARDE/Desktop/workArea/practiceVersions/Base Datos/Join - Multitables and more/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser query" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3909"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainalbums"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="albums" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="300"/><column index="3" value="72"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Multitablas_chinook_ConExplicación.sql">-----------------------------------------

SELECT name, Title ---no es necesaria cuando tenemos campos con diferentes nombres en las dos tablas 
	FROM artists
INNER JOIN albums on albums.ArtistId = artists.ArtistId; 
--Saldrá la relacion sin null

-----------------------------------------

SELECT name, Title 
	FROM artists
RIGHT JOIN albums on albums.ArtistId = artists.ArtistId;
--con rigth join nos dará igual que el inner debido que para crear un album necesitamos de un artista, por lo tanto 
--en esta relacion quedará igual ya que no existiran nulos debido a que no hay ningun album sin artista 

----------------------------------------

SELECT name, Title
	FROM artists
LEFT JOIN albums on albums.ArtistId = artists.ArtistId; 

--con left si me salen los null en cambio con inner solo me salen los NOT NULL, esto debido a que se puede crear un artista sin tener un album, por lo tanto habrán artistas que no tengan album y estos
--apareceran como NULL debido a que pueden haber artistas que no tengan albumns 

----------------------------------------

SELECT name, Title
	FROM artists
FULL OUTER JOIN albums on albums.ArtistId = artists.ArtistId; 

--el resultado de esto, es igual al LEFT JOIN debido que albunes es un subconjunto de artistas, porque no existe un album nulo o sin artista, en un hipotetico caso, nos saca todo, albums nulos y artistas nulos,
--mas la relacion inner. 
--teoria de conjuntos 

---------------------------------------

SELECT name, Title
	FROM artists
LEFT OUTER JOIN albums on albums.ArtistId = artists.ArtistId;
UNION ALL 

----Este se utilizaba cuando no habia RIGHT JOIN o FULL OUTER JOIN, ya que antes esta era la unica manera de ver todas la tablas, lo que hace ahora un FULL</sql><sql name="SQL 2">------------------TABLAS--------------------
CREATE TABLE &quot;employees&quot;
(
    [EmployeeId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [LastName] NVARCHAR(20)  NOT NULL,
    [FirstName] NVARCHAR(20)  NOT NULL,
    [Title] NVARCHAR(30),
    [ReportsTo] INTEGER,
    [BirthDate] DATETIME,
    [HireDate] DATETIME,
    [Address] NVARCHAR(70),
    [City] NVARCHAR(40),
    [State] NVARCHAR(40),
    [Country] NVARCHAR(40),
    [PostalCode] NVARCHAR(10),
    [Phone] NVARCHAR(24),
    [Fax] NVARCHAR(24),
    [Email] NVARCHAR(60),
    FOREIGN KEY ([ReportsTo]) REFERENCES &quot;employees&quot; ([EmployeeId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
);
CREATE TABLE &quot;customers&quot;
(
    [CustomerId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [FirstName] NVARCHAR(40)  NOT NULL,
    [LastName] NVARCHAR(20)  NOT NULL,
    [Company] NVARCHAR(80),
    [Address] NVARCHAR(70),
    [City] NVARCHAR(40),
    [State] NVARCHAR(40),
    [Country] NVARCHAR(40),
    [PostalCode] NVARCHAR(10),
    [Phone] NVARCHAR(24),
    [Fax] NVARCHAR(24),
    [Email] NVARCHAR(60)  NOT NULL,
    [SupportRepId] INTEGER,
    FOREIGN KEY ([SupportRepId]) REFERENCES &quot;employees&quot; ([EmployeeId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
);
-----------------CONSULTAS----------------------
</sql><current_tab id="1"/></tab_sql></sqlb_project>
